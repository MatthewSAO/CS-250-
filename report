CS 250 Final Project
[Matthew Ohlemacher]
[matthew.ohlemacher@snhu.edu]
Southern New Hampshire University 
ChadaTech is trying out a new way of working called Agile with Scrum instead of the old waterfall method. My team was asked to create an app for SNHU Travel using this new approach. This report will talk about how we did this, what we learned, and if this new way is better.
In the Scrum-Agile framework, different roles helped a lot in making the project successful. As the Scrum Master, I ran the Scrum meetings, fixed problems, and made sure everyone followed the Scrum rules. Now during Sprint Planning, I helped the team set clear goals for each sprint, which kept us on track. The Product Owner decided which tasks were most important based on what the customer needed. They were very important during our Sprint Review meetings, where they checked the features we made and gave feedback that we needed. The Development Team worked together to complete the tasks. Their different skills helped us handle all kinds of jobs, from coding to testing.
The Scrum-Agile method helped us finish our tasks better. By splitting the project into smaller sprints, we could focus on specific tasks and deliver working parts of the app regularly. This was good for moral and to show constant progress toward completion. For example, in one sprint, we made the Top destinations slideshow, tested it, and improved it based on feedback before moving on to the next feature. Regular Sprint Reviews allowed for us to get feedback from the Product Owner and make necessary changes early. Along with the constant emails this helped clear any misunderstanding and to keep us aligned with the tasks.
Scrum-Agile also helped us handle interruptions well. During one sprint, the client changed their requirements. The Product Owner updated the task list, and the team quickly adjusted to the new priorities. This flexibility and team indignity kept the project on schedule. The daily stand-up meetings helped us stay informed about changes and allowed us to fix problems quickly. They also helped us see issues teammates had problems with to help them out. For instance, when we had an issue with using paired programming, we talked about it in the stand-up meeting and came up with a compromise.
Clear communication was very important for our success. We made sure everyone stayed informed by having regular updates and meetings. Each day we had quick check-ins to talk about our progress, any challenges we were facing, and what we planned to do next. This kept everyone on the same page and allowed us to address issues quickly. We also had weekly team meetings to go over our larger goals and make sure we were aligned with the project’s objectives. These meetings gave us a chance to discuss any major changes or updates and ensured that everyone had a clear understanding of their tasks and responsibilities. Along with promoting open communication and teamwork helped us build a positive team environment. While encouraging everyone to share their ideas and feedback, which helped us come up with creative solutions to problems. 
Several tools and Scrum-Agile principles were key to our team’s success. We relied on organizational tools to manage tasks, track progress, and monitor sprints, which helped keep everything organized and ensured that everyone was aware of their responsibilities and deadlines. These tools allowed us to monitor our sprints effectively, track completed tasks, and identify any potential issues early. By using these tools efficiently, we could maintain a clear overview of the project’s status at all times. We began each sprint with a Sprint Planning meeting to set clear goals and define the tasks for the sprint, breaking down large tasks into smaller, manageable parts. The daily Stand-Ups kept the team informed about each other’s progress and allowed us to address any issues fast. At the end of each sprint, we held Sprint Reviews to demonstrate our work, gather feedback, and discuss any necessary changes that would need done. Retrospectives allowed us to reflect on the sprint, identify areas for improvement, and refine the processes. 
The Scrum-Agile method had both good and bad points for the Travel project. The flexibility allowed us to adapt to changing requirements and priorities, while frequent feedback from the Product Owner and stakeholders ensured we met user needs. The focus on collaboration improved team spirit and productivity. However, there was an initial learning curve as the team adjusted from the waterfall method to Scrum-Agile. We also faced challenges with implementing some agile practices, such as paired programming. While paired programming helped improve code quality and fostered knowledge sharing, it would require extra time to implement since this was a whole new way of doing things. Additionally, some team members initially found it uncomfortable to work so closely with others, which required time and effort to overcome. These issues highlighted the need for ongoing training and team-building activities. Despite these challenges, the overall benefits of the Scrum-Agile approach made it a valuable methodology for the project.
In conclusion, the Scrum-Agile approach worked well for the Travel project. The flexibility, frequent feedback, and emphasis on collaboration helped us complete the project successfully. Despite the initial learning curve and challenges in managing dependencies, the benefits were greater than the drawbacks. Based on our experience, I recommend considering the Scrum-Agile approach for other projects.
